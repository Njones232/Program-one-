#ifndef WORD_H
#define WORD_H

#include <vector>
#include <string>

class Word {
private:
    std::string originalWord;
    std::vector<char> displayWord;

public:
    Word(const std::string& word) : originalWord(word) {
        displayWord.resize(word.size(), '_');
    }

    std::vector<char> getWord() {
        return displayWord;
    }

    void addLetter(char c) {
        for (size_t i = 0; i < originalWord.size(); ++i) {
            if (originalWord[i] == c) {
                displayWord[i] = c;
            }
        }
    }

    bool findLetter(char c) {
        return originalWord.find(c) != std::string::npos;
    }

    bool solved() {
        return originalWord == std::string(displayWord.begin(), displayWord.end());
    }
};

#endif

#ifndef GAMESTATE_H
#define GAMESTATE_H

#include <vector>
#include <string>

class GameState {
private:
    std::vector<std::string> states = {
        "PLATFORM", "HEAD", "BODY", "LEFT_ARM", "RIGHT_ARM", "LEFT_LEG", "RIGHT_LEG"
    };
    int currentState;

public:
    GameState() : currentState(0) {}

    std::string getState() {
        return states[currentState];
    }

    void addState() {
        if (currentState < states.size() - 1) {
            currentState++;
        }
    }

    bool gameOver() {
        return currentState >= states.size() - 1;
    }
};

#endif

#ifndef GUESSEDLETTERS_H
#define GUESSEDLETTERS_H

#include <vector>
#include <string>

class GuessedLetters {
private:
    std::vector<char> guessedLetters;

public:
    std::string getLetters() {
        return std::string(guessedLetters.begin(), guessedLetters.end());
    }

    void addLetter(char c) {
        guessedLetters.push_back(c);
    }
};

#endif


#include <iostream>
#include "word.h"
#include "guessedLetters.h"
#include "gameState.h"
using namespace std;

int main() {
    Word word("JUGGLE");
    GuessedLetters guessed;
    GameState state;
    char letter;

    do {
        cout << "Game state: " << state.getState() << endl;
        cout << "Guessed letters: " << guessed.getLetters() << endl;
        cout << "Guess this word: ";
        for (char c : word.getWord()) {
            cout << c << ' ';
        }
        cout << endl << endl;
        cout << "Guess a letter: ";
        cin >> letter;
        letter = toupper(letter);
        if (word.findLetter(letter)) {
            word.addLetter(letter);
        } else {
            guessed.addLetter(letter);
            state.addState();
        }
    } while (!state.gameOver() && !word.solved());

    if (state.gameOver()) {
        cout << endl << "Game state: " << state.getState() << endl;
        cout << "Sorry you lose" << endl;
        cout << "The word was: " << "JUGGLE" << endl;
    } else {
        cout << endl << "Congratulations, you guessed the word: ";
        for (char c : word.getWord()) {
            cout << c << ' ';
        }
        cout << endl;
    }

    return 0;
}

g++ main.cpp -o hangman
./hangman


string userWord;
cout << "Enter a word to guess: ";
cin >> userWord;
Word word(userWord);

